<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: zsh,oh-my-zsh | yuyunko's github pages]]></title>
  <link href="http://yuyunko.github.com/blog/categories/zsh-oh-my-zsh/atom.xml" rel="self"/>
  <link href="http://yuyunko.github.com/"/>
  <updated>2013-02-03T02:52:18+09:00</updated>
  <id>http://yuyunko.github.com/</id>
  <author>
    <name><![CDATA[yuyunko]]></name>
    <email><![CDATA[i.xxxxxxxxxxxxx.13@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[oh-my-zsh]]></title>
    <link href="http://yuyunko.github.com/blog/2012/12/31/oh-my-zsh/"/>
    <updated>2012-12-31T10:59:00+09:00</updated>
    <id>http://yuyunko.github.com/blog/2012/12/31/oh-my-zsh</id>
    <content type="html"><![CDATA[<p>年末大掃除、zshの設定をoh-my-zshを基準に設定し直した。</p>

<h3>oh-my-zshの導入</h3>

<p>まず、自分でカスタマイズ出来るようにgithub上で、以下をフォーク</p>

<p><a href="https://github.com/robbyrussell/oh-my-zsh">robbyrussell/oh-my-zsh · GitHub</a></p>

<p>フォークした自分のoh-my-zshをclone
(clone先はデフォルトでは、~/.oh-my-zsh にしないといけない)
<code>sh
% git clone git@github.com:yuyunko/oh-my-zsh.git ~/.oh-my-zsh
</code>
設定をシンボリックリンク
<code>sh
% ln -s ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
</code>
設定ファイルの初期値は以下の通り
```sh</p>

<h1>Path to your oh-my-zsh configuration.</h1>

<p>ZSH=$HOME/.oh-my-zsh</p>

<h1>Set name of the theme to load.</h1>

<h1>Look in ~/.oh-my-zsh/themes/</h1>

<h1>Optionally, if you set this to "random", it'll load a random theme each</h1>

<h1>time that oh-my-zsh is loaded.</h1>

<p>ZSH_THEME="robbyrussell"</p>

<h1>Example aliases</h1>

<h1>alias zshconfig="mate ~/.zshrc"</h1>

<h1>alias ohmyzsh="mate ~/.oh-my-zsh"</h1>

<h1>Set to this to use case-sensitive completion</h1>

<h1>CASE_SENSITIVE="true"</h1>

<h1>Comment this out to disable bi-weekly auto-update checks</h1>

<h1>DISABLE_AUTO_UPDATE="true"</h1>

<h1>Uncomment to change how many often would you like to wait before auto-updates occur? (in days)</h1>

<h1>export UPDATE_ZSH_DAYS=13</h1>

<h1>Uncomment following line if you want to disable colors in ls</h1>

<h1>DISABLE_LS_COLORS="true"</h1>

<h1>Uncomment following line if you want to disable autosetting terminal title.</h1>

<h1>DISABLE_AUTO_TITLE="true"</h1>

<h1>Uncomment following line if you want red dots to be displayed while waiting for completion</h1>

<h1>COMPLETION_WAITING_DOTS="true"</h1>

<h1>Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)</h1>

<h1>Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/</h1>

<h1>Example format: plugins=(rails git textmate ruby lighthouse)</h1>

<p>plugins=(git)</p>

<p>source $ZSH/oh-my-zsh.sh</p>

<h1>Customize to your needs...</h1>

<p>```
最後の行の「Customize to your needs」の後に自分の設定を追記していく。</p>

<p>テーマは、上記、「ZSH_THEME」で設定する。</p>

<p>.oh-my-zsh/themes に自分で「mytheme.zsh-theme」という拡張子で設定ファイルを記述し、
上記設定ファイルに「ZSH_THEME=mytheme」とすると、読み込んでくれる。</p>

<p>僕はデフォルトの"robbyrussell"のテーマに<a href="https://github.com/clear-code/zsh.d">clear-code/zsh.d · GitHub</a>さんの
設定をプラスさせて貰ったようなのを利用。</p>

<p><div><script src='https://gist.github.com/4418029.js'></script>
<noscript><pre><code>## 256色生成用便利関数
### red: 0-5
### green: 0-5
### blue: 0-5
color256()
{
    local red=$1; shift
    local green=$2; shift
    local blue=$3; shift

    echo -n $[$red * 36 + $green * 6 + $blue + 16]
}

fg256()
{
    echo -n $'\e[38;5;'$(color256 &quot;$@&quot;)&quot;m&quot;
}

bg256()
{
    echo -n $'\e[48;5;'$(color256 &quot;$@&quot;)&quot;m&quot;
}
### プロンプトバーの左側
### %{%B%}...%{%b%}: 「...」を太字にする。
### %{%F{cyan}%}...%{%f%}: 「...」をシアン色の文字にする。
### %n: ユーザ名
### %m: ホスト名（完全なホスト名ではなくて短いホスト名）
### %{%B%F{white}%(?.%K{green}.%K{red})%}%?%{%f%k%b%}:
### 最後に実行したコマンドが正常終了していれば
### 太字で白文字で緑背景にして異常終了していれば
### 太字で白文字で赤背景にする。
### %{%F{white}%}: 白文字にする。
### %(x.true-text.false-text): xが真のときはtrue-textになり
### 偽のときはfalse-textになる。
### ?: 最後に実行したコマンドの終了ステータスが0のときに真になる。
### %K{green}: 緑景色にする。
### %K{red}: 赤景色を赤にする。
### %?: 最後に実行したコマンドの終了ステータス
### %{%k%}: 背景色を元に戻す。
### %{%f%}: 文字の色を元に戻す。
### %{%b%}: 太字を元に戻す。
### %D{%Y/%m/%d %H:%M}: 日付。「年/月/日 時:分」というフォーマット。
prompt_bar_left_self=&quot;(%{%B%}%n%{%b%}%{%F{cyan}%}@%{%f%}%{%B%}%m%{%b%})&quot;
prompt_bar_left_status=&quot;(%{%B%F{white}%(?.%K{green}.%K{red})%}%?%{%k%f%b%})&quot;
prompt_bar_left_date=&quot;&lt;%{%B%}%D{%Y/%m/%d %H:%M}%{%b%}&gt;&quot;
prompt_bar_left=&quot;-${prompt_bar_left_self}-${prompt_bar_left_status}-${prompt_bar_left_date}-&quot;
### プロンプトバーの右側
### %{%B%K{magenta}%F{white}%}...%{%f%k%b%}:
### 「...」を太字のマゼンタ背景の白文字にする。
### %d: カレントディレクトリのフルパス（省略しない）
prompt_bar_right=&quot;[%{%B%K{magenta}%F{white}%}%d%{%f%k%b%}]-&quot;

### 2行目左にでるプロンプト。
### %h: ヒストリ数。
### %(1j,(%j),): 実行中のジョブ数が1つ以上ある場合だけ「(%j)」を表示。
### %j: 実行中のジョブ数。
### %{%B%}...%{%b%}: 「...」を太字にする。
### %#: 一般ユーザなら「%」、rootユーザなら「#」になる。
#prompt_left=&quot;-[%h]%(1j,(%j),)%{%B%}%#%{%b%} &quot;
prompt_update() {

    echo $[RANDOM % 6] &gt; /dev/null

    #prompt_left=&quot;%{%F$(fg256 $[RANDOM % 6] $[RANDOM % 6] $[RANDOM % 6])%}-[%h]%(1j,(%j),)%{%B%}%#%{%b%}%{%f%} &quot;
    prompt_left=&quot;%{%F$(fg256 $[RANDOM % 5] $[RANDOM % 5] $[RANDOM % 5])%}-[%h]%(1j,(%j),)%{%B%}%#%{%b%}%{%f%} &quot;
    PROMPT='${prompt_bar_left}${prompt_bar_right}'$'\n''${prompt_left}%{$fg_bold[red]%}➜ %{$fg_bold[green]%}%p %{$fg[cyan]%}%c %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'

    ZSH_THEME_GIT_PROMPT_PREFIX=&quot;git:(%{$fg[red]%}&quot;
    ZSH_THEME_GIT_PROMPT_SUFFIX=&quot;%{$reset_color%}&quot;
    ZSH_THEME_GIT_PROMPT_DIRTY=&quot;%{$fg[blue]%}) %{$fg[yellow]%}✗%{$reset_color%}&quot;
    ZSH_THEME_GIT_PROMPT_CLEAN=&quot;%{$fg[blue]%})&quot;

}

add-zsh-hook precmd prompt_update</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
